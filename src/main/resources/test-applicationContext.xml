<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-3.0.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <tx:annotation-driven/>

    <context:annotation-config />

    <bean id="userService" class="io.spring.toby.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="userLevelUpgradePolicy" ref="userLevelUpgradePolicy"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <bean id="userDao" class="io.spring.toby.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlService" ref="sqlService"/>
    </bean>

    <bean id="sqlService" class="io.spring.toby.user.sqlservice.DefaultSqlService" />

    <bean id="userLevelUpgradePolicy" class="io.spring.toby.user.service.UserLevelUpgradePolicyImpl"/>

    <!--트랜잭션 proxy 생성-->
    <bean id="transactionAdvice" class="io.spring.toby.user.service.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <!-- pointcut method 1 -->
    <!--<bean id="transactionPointcut" class="io.spring.toby.learningtest.jdk.proxy.NameMatchClassMethodPointcut">
        <property name="mappedClassName" value="*ServiceImpl"/>
        <property name="mappedName" value="upgrade*"/>
    </bean>-->

    <!-- pointcut method 2 -->
    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>
    </bean>

    <!--<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointcut"/>
    </bean>-->

    <!--  BeanPostProcessor : 빈 후처리기 중 하나 -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>-->

    <!--  특정 기술의 트랜잭션 관리 클래스를 적용할 때 여기를 수정하면 됨  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/toby"/>
        <property name="username" value="root"/>
        <property name="password" value="springtest"/>
    </bean>

    <!--실제 메일서비스-->
    <!--<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com"/>
    </bean>-->
    <!--메일 테스트 용도-->
    <bean id="mailSender" class="io.spring.toby.user.service.DummyMailSender"/>

    <!--Test 용도-->
    <bean id="testUserService"
          class="io.spring.toby.user.service.UserServiceTest$TestUserServiceImpl"
          parent="userService"/>
</beans>
